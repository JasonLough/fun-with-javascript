'use strict'

const EventEmitter = require('events');

class MyEmitter extends EventEmitter {}

const myEmitter = new MyEmitter();

// static (hard coded) named event listener example
myEmitter.on('the end', () => {
  console.log('---The End---');
})

/********************
  eventSubscriber is an IIFE, so once this is brought in to the main script
  file, it is automatically ran, resulting in an object with  2 functions 
  in it: subscribe() and emit(). Since these do a 'return this;', you can 
  chain them one after another.
********************/
const eventSubscriber = (function(){

  return {

    // tie a named event to a function
    subscribe(evt, fn) { //dynamically add listeners to functions
      myEmitter.on(evt, fn);
      return this;
    },

    // fire off a named event, causing any functions tied to it to fire
    emit(evt) {
      myEmitter.emit(evt);
      return this;
    }
  }

})()

module.exports = { eventSubscriber }
